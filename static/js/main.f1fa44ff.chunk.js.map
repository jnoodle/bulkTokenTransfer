{"version":3,"sources":["getWeb3.js","components/Header.js","generateElement.js","components/1.js","components/2.js","components/3.js","components/Transaction.js","components/approve.js","components/4.js","components/5.js","components/Retry.js","components/Welcome.js","components/Navigation.js","App.js","stores/web3Store.js","stores/tokenStore.js","stores/gasPriceStore.js","stores/txStore.js","stores/UiStore.js","index.js"],"names":["_web3Config","_web3Promise","getWeb3","Promise","resolve","reject","window","addEventListener","hasOwnProperty","console","log","error","message","web3","Web3","givenProvider","eth","net","getId","then","netId","netIdName","trustApiName","explorerUrl","document","title","a","ethereum","request","method","accounts","firstAccount","length","defaultAccount","estimateGas","__proto__","call","web3Instance","injectedWeb3","catch","err","on","_chainId","location","reload","Header","inject","observer","state","multisenderAddress","myAddress","chain","address","Web3Utils","toChecksumAddress","replace","props","UiStore","tokenStore","proxyMultiSenderAddress","web3Store","setState","this","className","href","target","formatAddress","onClick","React","Component","generateElement","msg","errorNode","createElement","innerHTML","required","control","isChanged","isUsed","value","toString","trim","FirstStep","onNext","wizard","step","id","setTimeout","parseAddresses","jsonAddresses","swal","text","icon","invalid_addresses","JSON","stringify","slice","push","txStore","setStartedUrl","onTokenAddress","bind","onDecimalsChange","format","placeholder","tokenAddress","label","csv","onParse","parseCompleted","addNextHandler","tokenInfoArray","userTokens","filter","t","tokenInfo","reduce","v","addresses","Object","keys","e","isAddress","setTokenAddress","setDecimals","res","rej","csvtojson","noheader","fromString","el","defineProperty","writable","configurable","enumerable","setJsonAddresses","content","onCsvChange","errors","htmlFor","Creatable","isLoading","loading","name","onChange","loadingPlaceholder","options","disabled","validations","onBlur","onFileLoaded","data","fileInfo","originalFile","join","createTheme","primary","secondary","fontFamily","background","default","context","divider","button","focus","hover","sortFocus","RecipientsDataTable","columns","selector","sortable","grow","tokenSymbol","left","theme","customStyles","pagination","style","marginBottom","cells","paginationPerPage","paginationTotalRows","ThirdStep","BN","totalBalance","gt","defAccTokenBalance","multisendGasEthValue","getMultisendPlusApproveGasEthValue","ethBalanceWei","toWei","ethBalance","displayMultisendGasEthValue","parseFloat","fromWei","toFixed","mainTokenName","allowance","gte","onGasPriceChange","selected","gasPriceStore","setSelectedGasPrice","updateCurrentFee","onGasShareChange","setSelectedGasShare","gasPricesArray","gasPrice","transferGas","approveGas","multisendGas","gasSharesArray","dublicates","getTransferGas","totalNumberTx","addPerTx","arrayLimit","getMultisendGas","multisendGasOrig","Math","floor","parseInt","getApproveTxGas","getApproveGas","approveGasOrig","clearTimeout","_updateCurrentFeeImpl","standardInHex","approvePlusMultisendGas","plus","setCurrentFee","savedGas","minus","newCurrentFeeRounded","times","div","selectedGasShare","dp","displayValue","transferEthValue","displayTransferEthValue","savedGasEthValue","displaySavedGasEthValue","display","selectedGasPrice","padding","renderTokenBalance","renderTokenAllowance","addressesData","Transaction","classname","tx","hash","status","ApproveStep","intervalId","txs","doApprove","setInterval","clearInterval","txHashes","map","index","mined","FourthStep","totalNumberOftx","calcTotalNumberOftx","doSendExecuted","doSend","Number","txCount","label2","onTxInput","txHash","getTxReceipt","txdata","type","Link","to","Navigation","render","next","previous","steps","App","nextHandlers","forEach","handler","ex","startedUrl","Redirect","pathname","Route","history","percent","indexOf","color","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","undefined","Web3Store","rootStore","userTokensInitialized","url","web3Config","getUserTokens","setExplorerUrl","blockchain_network","toLowerCase","api_domain","etherscanApiKey","process","apiHref","fetch","json","result","tokens","tokensUniqueObj","i","token","tokensUnique","unshift","observable","action","require","TokenStore","getWeb3Promise","web3Obj","netIdEnvVarName","toUpperCase","contractAddress","decimals","Contract","ERC20ABI","methods","balanceOf","multiplier","subscribe","getBalance","toFormat","symbol","currentFee","getCurrentFee","getEthBalance","getArrayLimit","getDecimals","getAllowance","getTokenSymbol","balances_to_send","addresses_to_send","filteredAddresses","account","balance","values","indexAddr","addr","obj","pow","ceil","computed","GasPriceStore","gasPricePromise","getGasPrices","response","fast","gasPrices","toHex","TxStore","txHashToIndex","interval","approval","keepRunning","_approve","toJS","_multisend","getGasPrice","myGasPrice","totalBalanceWithDecimals","approve","send","from","once","receipt","getTxStatus","transactionHash","encodeABI","encodedData","transfer","totalGas","_getTransferGas","token_address","start","end","totalInWei","total","val","balances_to_send_sum","totalInEth","ethValue","MultiSenderAbi","multisender","multiTransfer_OST","gas","multiTransferToken_a4A","substring","getTransaction","txInfo","getTransactionReceipt","gasUsed","Root","HashRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f1fa44ff.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getAccounts = () => {\n  return new Promise(function (resolve, reject) {\n    (async () => {\n      try {\n        // Will open the MetaMask UI\n        // You should disable this button while the request is pending!\n        const { ethereum } = window;\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        resolve(accounts);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    })();\n  });\n};\n\nlet _web3Config = null;\nlet _web3Promise = null;\nlet getWeb3 = () => {\n  if (!_web3Promise) {\n    _web3Promise = new Promise(function (resolve, reject) {\n      if (null !== _web3Config) {\n        resolve(_web3Config);\n        return;\n      }\n      // Wait for loading completion to avoid race conditions with ethereum injection timing.\n      window.addEventListener(\"load\", function () {\n        // Checking if ethereum has been injected by the browser (Mist/MetaMask)\n        if (window.hasOwnProperty(\"ethereum\")) {\n          // Use Mist/MetaMask's provider.\n          let web3 = new Web3(Web3.givenProvider);\n          web3.eth.net\n            .getId()\n            .then((netId) => {\n              let netIdName, trustApiName, explorerUrl;\n              console.log(\"netId\", netId);\n              netId = \"\" + netId;\n              switch (netId) {\n                case \"1\":\n                  netIdName = \"Mainnet\";\n                  trustApiName = \"api\";\n                  explorerUrl = \"https://etherscan.io\";\n                  console.log(\"This is Foundation\", netId);\n                  break;\n                case \"3\":\n                  netIdName = \"Ropsten\";\n                  trustApiName = \"ropsten\";\n                  explorerUrl = \"https://ropsten.etherscan.io\";\n                  console.log(\"This is Ropsten\", netId);\n                  break;\n                case \"4\":\n                  netIdName = \"Rinkeby\";\n                  trustApiName = \"rinkeby\";\n                  explorerUrl = \"https://rinkeby.etherscan.io\";\n                  console.log(\"This is Rinkeby\", netId);\n                  break;\n                case \"42\":\n                  netIdName = \"Kovan\";\n                  trustApiName = \"kovan\";\n                  explorerUrl = \"https://kovan.etherscan.io\";\n                  console.log(\"This is Kovan\", netId);\n                  break;\n                case \"99\":\n                  netIdName = \"POA Core\";\n                  trustApiName = \"poa\";\n                  explorerUrl = \"https://poaexplorer.com\";\n                  console.log(\"This is Core\", netId);\n                  break;\n                case \"77\":\n                  netIdName = \"POA Sokol\";\n                  trustApiName = \"https://trust-sokol.herokuapp.com\";\n                  explorerUrl = \"https://sokol.poaexplorer.com\";\n                  console.log(\"This is Sokol\", netId);\n                  break;\n                case \"137\":\n                  netIdName = \"Matic\";\n                  trustApiName = \"api\";\n                  explorerUrl = \"https://polygonscan.com\";\n                  console.log(\"This is Matic\", netId);\n                  break;\n                case \"80001\":\n                  netIdName = \"Mumbai\";\n                  trustApiName = \"mumbai\";\n                  explorerUrl = \"https://mumbai.polygonscan.com\";\n                  console.log(\"This is Mumbai\", netId);\n                  break;\n                case \"56\":\n                  netIdName = \"BSCMainnet\";\n                  trustApiName = \"https://api.bscscan.com\";\n                  explorerUrl = \"https://bscscan.com\";\n                  console.log(\"This is BSC Mainnet\", netId);\n                  break;\n                case \"97\":\n                  netIdName = \"BSCTestnet\";\n                  trustApiName = \"https://api-testnet.bscscan.com\";\n                  explorerUrl = \"https://testnet.bscscan.com\";\n                  console.log(\"This is BSC Testnet\", netId);\n                  break;\n                default:\n                  netIdName = \"Unknown\";\n                  console.log(\"This is an unknown network.\", netId);\n              }\n              document.title = `${netIdName} - BulkTokenTransfer`;\n              getAccounts()\n                .then((accounts) => {\n                  const firstAccount = accounts.length > 0 ? accounts[0] : null;\n                  var defaultAccount =\n                    web3.eth.defaultAccount || firstAccount || null;\n                  if (defaultAccount === null) {\n                    reject({\n                      message:\n                        \"Please unlock your metamask and refresh the page\",\n                    });\n                    return;\n                  }\n                  if (\n                    web3.eth.estimateGas.__proto__ &&\n                    web3.eth.estimateGas.__proto__.call\n                  ) {\n                    console.log(\n                      \"typeof web3.eth.estimateGas.__proto__.call:\",\n                      typeof web3.eth.estimateGas.__proto__.call\n                    );\n                    web3.eth.estimateGas.call =\n                      web3.eth.estimateGas.__proto__.call;\n                    console.log(\n                      \"typeof web3.eth.estimateGas.call:\",\n                      typeof web3.eth.estimateGas.call\n                    );\n                  }\n                  const results = {\n                    web3Instance: web3,\n                    netIdName,\n                    netId,\n                    injectedWeb3: true,\n                    defaultAccount,\n                    trustApiName,\n                    explorerUrl,\n                  };\n                  _web3Config = results;\n                  resolve(_web3Config);\n                })\n                .catch((err) => {\n                  reject(err);\n                });\n            })\n            .catch((err) => {\n              reject(err);\n            });\n\n          console.log(\"Injected web3 detected.\");\n\n          ethereum.on(\"chainChanged\", (_chainId) => window.location.reload());\n          ethereum.on(\"accountsChanged\", (accounts) =>\n            window.location.reload()\n          );\n        } else {\n          // Fallback to localhost if no web3 injection.\n          const errorMsg = `Metamask is not installed. Please go to\n          https://metamask.io and return to this page after you installed it`;\n          console.log(\"No web3 instance injected, using Local web3.\");\n          console.error(\"Metamask not found\");\n          reject({ message: errorMsg });\n          return;\n        }\n      });\n    });\n  }\n  return _web3Promise;\n};\n\nexport default getWeb3;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport GithubCorner from \"react-github-corner\";\nimport Web3Utils from \"web3-utils\";\nimport getWeb3 from \"../getWeb3\";\n\n@inject(\"UiStore\")\n@observer\nexport class Header extends React.Component {\n  state = {\n    multisenderAddress: null,\n    myAddress: null,\n    chain: null,\n  };\n\n  formatAddress(address) {\n    return address\n      ? Web3Utils.toChecksumAddress(address).replace(\n          /(.{6}).*(.{6})/,\n          \"$1...$2\"\n        )\n      : \"\";\n  }\n\n  componentDidMount() {\n    (async () => {\n      const multisenderAddress =\n        await this.props.UiStore.tokenStore.proxyMultiSenderAddress();\n      const chain = await this.props.UiStore.web3Store.netIdName;\n      const myAddress = await this.props.UiStore.web3Store.defaultAccount;\n      console.log(\"myAddress\", myAddress);\n      this.setState({ multisenderAddress, chain, myAddress });\n    })();\n  }\n\n  render() {\n    const explorerUrl =\n      this.props.UiStore.web3Store.explorerUrl || \"https://etherscan.io\";\n\n    return (\n      <header className=\"header\">\n        <div className=\"multisend-container\">\n          <a href=\"#\" className=\"header-logo\">\n            Bulk Token Transfer Tool\n          </a>\n          <form className=\"form form_header\">\n            {/* <Link className=\"button\" to='/retry'>Retry Failed Transaction</Link> */}\n\n            {this.state.myAddress ? (\n              <>\n                <label className=\"multisend-label\">\n                  Chain: {this.state.chain}\n                </label>\n                <label className=\"multisend-label\">\n                  My Address:{\" \"}\n                  <a\n                    target=\"_blank\"\n                    href={`${explorerUrl}/address/${this.state.myAddress}`}\n                  >\n                    {this.formatAddress(this.state.myAddress)}\n                  </a>\n                </label>\n                <label className=\"multisend-label\">\n                  Contract Address:{\" \"}\n                  <a\n                    target=\"_blank\"\n                    href={`${explorerUrl}/address/${this.state.multisenderAddress}`}\n                  >\n                    {this.formatAddress(this.state.multisenderAddress)}\n                  </a>\n                </label>\n              </>\n            ) : null}\n            {this.state.myAddress ? null : (\n              <label className=\"multisend-label\">\n                <a\n                  href=\"#\"\n                  onClick={() => {\n                    window.ethereum &&\n                      window.ethereum.request({\n                        method: \"eth_requestAccounts\",\n                      });\n                  }}\n                >\n                  Connect Wallet\n                </a>\n              </label>\n            )}\n          </form>\n        </div>\n        {/*<div className=\"multisend-container\">*/}\n        {/*  Supports Mainnet, Ropsten, Rinkeby, Kovan, Goerli, BSC, Mumbai, Matic*/}\n        {/*</div>*/}\n      </header>\n    );\n  }\n}\n","export default function generateElement(msg){\n  let errorNode = document.createElement(\"div\");\n  errorNode.innerHTML = `${msg}`;\n  return errorNode;\n}","import React from \"react\";\nimport Web3Utils from \"web3-utils\";\nimport Form from \"react-validation/build/form\";\nimport Textarea from \"react-validation/build/textarea\";\nimport Button from \"react-validation/build/button\";\nimport { form, control, button } from \"react-validation\";\nimport { inject, observer } from \"mobx-react\";\nimport swal from \"sweetalert\";\nimport generateElement from \"../generateElement\";\nimport Example from \"./example.json\";\n// import { PulseLoader} from 'react-spinners';\nimport { RadioGroup, Radio } from \"react-radio-group\";\nimport csvtojson from \"csvtojson\";\nimport Select from \"react-select\";\nimport CSVReader from \"react-csv-reader\";\nimport \"../assets/stylesheets/react-select.min.css\";\n\nconst ownInput = ({ error, isChanged, isUsed, ...props }) => (\n  <div>\n    {isChanged && isUsed && error}\n    <input {...props} />\n  </div>\n);\nconst Input = control(ownInput);\n\nconst required = (value) => {\n  if (!value.toString().trim().length) {\n    return <span className=\"error\">required</span>;\n  }\n};\n\nconst isAddress = (value) => {\n  if (!Web3Utils.isAddress(value)) {\n    return <span className=\"error\">Token address is invalid</span>;\n  }\n};\n// const InvalidJSON = <div>Your JSON is invalid, please visit <a href=\"https://jsonlint.com/\" target=\"_blank\">Online Json Validator</a></div>\n\n// const isJson = (value) => {\n//   try {\n//     JSON.parse(value)\n//   } catch(e) {\n//     return InvalidJSON\n//   }\n// };\n\n@inject(\"UiStore\")\n@observer\nexport class FirstStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.txStore = props.UiStore.txStore;\n    this.web3Store = props.UiStore.web3Store;\n    this.web3Store.setStartedUrl(\"#/\");\n    this.onTokenAddress = this.onTokenAddress.bind(this);\n    this.onDecimalsChange = this.onDecimalsChange.bind(this);\n    // this.onJsonChange = this.onJsonChange.bind(this);\n    this.state = {\n      format: \"csv\",\n      placeholder: `\n0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\n0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n`,\n      tokenAddress: { label: \"\", value: null },\n      csv: \"\",\n    };\n    // this.onSelectFormat = this.onSelectFormat.bind(this)\n    this.onParse = this.onParse.bind(this);\n    this.parseCompleted = false;\n    // this.list = [];\n\n    this.props.addNextHandler(this.onNext);\n  }\n\n  componentDidMount() {\n    // this.tokenStore.reset()\n    // this.txStore.reset()\n\n    if (\"\" !== this.tokenStore.tokenAddress) {\n      const tokenInfoArray = this.web3Store.userTokens.filter((t) => {\n        return t.value === this.tokenStore.tokenAddress;\n      });\n      if (tokenInfoArray.length > 0) {\n        const tokenInfo = tokenInfoArray[0];\n        this.setState({ tokenAddress: { ...tokenInfo } });\n      }\n    }\n\n    if (this.tokenStore.jsonAddresses.length > 0) {\n      const csv = this.tokenStore.jsonAddresses.reduce((csv, v) => {\n        const addresses = Object.keys(v);\n        const val = addresses[0] + \",\" + v[addresses[0]];\n        return csv + val + \"\\n\";\n      }, \"\");\n      this.setState({ csv: csv });\n    }\n  }\n  async onTokenAddress(e) {\n    if (!e) {\n      this.setState({ tokenAddress: { label: \"\", value: \"\" } });\n      return;\n    }\n    const address = e.value;\n    if (Web3Utils.isAddress(address)) {\n      await this.tokenStore.setTokenAddress(address);\n      this.setState({ tokenAddress: { label: e.label, value: e.value } });\n    }\n  }\n  //   onSelectFormat(newFormat){\n  //     this.parseCompleted = false;\n  //     if(newFormat === 'csv'){\n  //       this.setState({format: newFormat, placeholder: `\n  // 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n  // 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\n  // 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n  // 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n  //   `})\n  //     swal(\"Information\", `Please provide CSV file in comma separated address,balance format one line per address.\n  //     \\nExample:\\n\n  // 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\n  // 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,113.45\n  // 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\n  // 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\n  //     `, 'info')\n  //     } else {\n  //       this.setState({format: newFormat, placeholder: JSON.stringify(Example)})\n  //       swal({\n  //         content: generateElement(`<div style=\"color:black;\">\n  //         Please provide JSON-array file in the following format.\n  //         \\nExample:\\n\n  //         <div style=\"font-size: 12px;color:purple;\">\n  //         [<br/>\n  //           {\"0xCBA5018De6b2b6F89d84A1F5A68953f07554765e\":\"12\"},\n  //           {\"0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9\":\"1123.45645\"},\n  //           {\"0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae\":\"1.049\"},\n  //           {\"0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774\":\"14546\"}\n  //           <br/>]\n  //         </div>\n  //         </div>\n  //         `),\n  //         icon: 'info'\n  //       })\n  //\n  //     }\n  //   }\n  onDecimalsChange(e) {\n    this.tokenStore.setDecimals(e.target.value);\n  }\n\n  // onJsonChange(value) {\n  //   try {\n  //     let addresses = JSON.parse(value);\n  //     this.tokenStore.setJsonAddresses(addresses)\n  //     this.parseCompleted = true;\n  //   } catch(e) {\n  //     const error = e.message.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t');\n  //     console.error(error)\n  //     swal({\n  //       content: generateElement(`${error} Please visit <a target=\"_blank\" href=\"https://jsonlint.com\">JsonLint.com</a>`),\n  //       icon: \"error\",\n  //     })\n  //   }\n  // }\n\n  async onCsvChange(value) {\n    return new Promise((res, rej) => {\n      let addresses = [];\n      csvtojson({ noheader: true })\n        .fromString(value)\n        .on(\"csv\", (csv) => {\n          let el = {};\n          if (csv.length === 2 && csv[0] && csv[1]) {\n            Object.defineProperty(el, csv[0], {\n              value: csv[1],\n              writable: true,\n              configurable: true,\n              enumerable: true,\n            });\n            addresses.push(el);\n          }\n        })\n        .on(\"end\", () => {\n          try {\n            console.log(\"csv is done\");\n            this.parseCompleted = true;\n            this.tokenStore.setJsonAddresses(addresses);\n            res(addresses);\n          } catch (e) {\n            console.error(e);\n            rej(e);\n            swal({\n              content: \"Your CSV is invalid\",\n              icon: \"error\",\n            });\n          }\n        });\n    });\n  }\n\n  onParse(e) {\n    // this.list = e.target.value;\n    this.setState({ csv: e.target.value });\n    // if(this.state.format === 'json') {\n    //   this.onJsonChange(e.target.value)\n    // }\n    if (this.state.format === \"csv\") {\n      this.onCsvChange(e.target.value);\n    }\n    return;\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"home\" !== wizard.step.id) {\n      return;\n    }\n\n    try {\n      // if (!this.parseCompleted) {\n      //   console.log(\"await this.onCsvChange\");\n      //   await this.onCsvChange(this.state.csv);\n      // }\n      setTimeout(async () => {\n        await this.tokenStore.parseAddresses();\n      }, 100);\n      console.log(\"length of addresses\", this.tokenStore.jsonAddresses.length);\n      if (this.tokenStore.jsonAddresses.length === 0) {\n        swal({\n          title: \"The address list is empty.\",\n          text: \"Please make sure you set correct CSV or JSON format in input selector\",\n          icon: \"error\",\n        });\n        return;\n      }\n      if (this.tokenStore.invalid_addresses.length > 0) {\n        swal({\n          title:\n            \"There are invalid eth addresses. If you click Next, it will remove them from the list.\",\n          text: JSON.stringify(\n            this.tokenStore.invalid_addresses.slice(),\n            null,\n            \"\\n\"\n          ),\n          icon: \"error\",\n        });\n        return;\n      }\n      wizard.push(\"inspect\");\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: \"Parsing Error\",\n        text: e.message,\n        icon: \"error\",\n      });\n    }\n  };\n\n  render() {\n    if (this.tokenStore.errors.length > 0) {\n      swal(\"Error!\", this.tokenStore.errors.toString(), \"error\");\n    }\n    if (this.web3Store.errors.length > 0) {\n      swal(\"Error!\", this.web3Store.errors.toString(), \"error\");\n    }\n    return (\n      <div>\n        <div className=\"description\">\n          <ol>\n            <li>Select Token Address</li>\n            <li>Enter comma-separated list of addresses and values to send</li>\n            <li>\n              Press the <strong>Next</strong> button\n            </li>\n          </ol>\n        </div>\n        <Form className=\"form\">\n          <div className=\"form-inline\">\n            <div className=\"form-inline-i form-inline-i_token-address\">\n              <label htmlFor=\"token-address\" className=\"multisend-label\">\n                Token Address\n              </label>\n              <Select.Creatable\n                isLoading={this.web3Store.loading}\n                name=\"token-address\"\n                id=\"token-address\"\n                value={this.state.tokenAddress}\n                onChange={this.onTokenAddress}\n                loadingPlaceholder=\"Loading your token addresses...\"\n                placeholder=\"Please select a token or input the address\"\n                options={this.web3Store.userTokens.slice()}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-inline\">\n            <div className=\"form-inline-i form-inline-i_token-address-values\">\n              <label htmlFor=\"token-address-values\" className=\"multisend-label\">\n                List of addresses and values (Paste into textarea or upload a\n                csv file)\n              </label>\n              <Textarea\n                disabled={this.web3Store.loading}\n                name=\"token-address-values\"\n                id=\"token-address-values\"\n                data-gram\n                validations={[required]}\n                placeholder={`Example(Address,TokenAmount): ${this.state.placeholder}`}\n                value={this.state.csv}\n                onBlur={this.onParse}\n                id=\"addresses-with-balances\"\n                className=\"multisend-textarea\"\n              ></Textarea>\n              <CSVReader\n                onFileLoaded={(data, fileInfo, originalFile) => {\n                  console.log(data, fileInfo, originalFile);\n                  if (data && data.length > 0) {\n                    this.setState({ csv: data.join(\"\\n\") });\n                    this.onCsvChange(data.join(\"\\n\"));\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class SecondStep extends React.Component {\n  render() {\n    return (\n      <div className=\"multisend-container multisend-container_bg\">\n        <div className=\"content\">\n          <h1 className=\"title\"><strong>Welcome to YARD</strong> AirDrop Tool</h1>\n          <p className=\"description\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n            tempor incididunt ut labore <a href=\"#\">et dolore magna</a> aliqua.\n          </p>\n          <form className=\"form\">\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_token-address\">\n                <label htmlFor=\"token-address\" className=\"multisend-label\">Token Address</label>\n                <input type=\"text\" className=\"input\" id=\"token-address\" />\n              </div>\n              <div className=\"form-inline-i form-inline-i_token-decimals\">\n                <label htmlFor=\"token-decimals\" className=\"multisend-label\">Token Decimals</label>\n                <input type=\"text\" className=\"input\" id=\"token-decimals\" />\n              </div>\n            </div>\n            <div className=\"form-inline\">\n              <div className=\"form-inline-i form-inline-i_balance\">\n                <label htmlFor=\"balance\" className=\"multisend-label\">Balance</label>\n                <input type=\"text\" className=\"input\" id=\"balance\" />\n              </div>\n              <div className=\"form-inline-i form-inline-i_balance\">\n                <label htmlFor=\"address-balance\" className=\"multisend-label\">Address with Balance</label>\n                <input type=\"text\" className=\"input\" id=\"address-balance\" />\n              </div>\n              <button type=\"button\" className=\"button button_add\"></button>\n            </div>\n            <div className=\"table\">\n              <div className=\"table-tr\">\n                <p className=\"table-td\">0.5 ETH</p>\n                <p className=\"table-td table-td_hash\">0xf3a71cc1be5ce833c471e3f25aa391f9cd56e1aa</p>\n                <div className=\"table-td\">\n                  <a href=\"#\" className=\"table-remove\"></a>\n                </div>\n              </div>\n              <div className=\"table-tr\">\n                <p className=\"table-td\">2.001 ETH</p>\n                <p className=\"table-td table-td_hash\">0x67de6a531b58327d075535e89524be5c5672f16b</p>\n                <div className=\"table-td\">\n                  <a href=\"#\" className=\"table-remove\"></a>\n                </div>\n              </div>\n            </div>\n            <Link className=\"button button_next\" to='/3'>Check Information</Link>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport BN from \"bignumber.js\";\nimport Web3Utils from \"web3-utils\";\nimport swal from \"sweetalert\";\nimport Select from \"react-select\";\nimport Form from \"react-validation/build/form\";\n\nimport DataTable, { createTheme } from \"react-data-table-component\";\n\ncreateTheme(\"solarized\", {\n  text: {\n    primary: \"#fff\",\n    secondary: \"rgb(156, 216, 255)\",\n    fontFamily: \"monospace\",\n  },\n  background: {\n    default: \"rgba(255,255,255,0)\",\n  },\n  context: {\n    background: \"rgba(255,255,255,1)\",\n    text: \"#FFFFFF\",\n  },\n  divider: {\n    default: \"#073642\",\n  },\n  button: {\n    default: \"rgba(156, 216, 255, 1)\",\n    focus: \"rgba(156, 216, 255,.8)\",\n    hover: \"rgba(156, 216, 255,.8)\",\n    disabled: \"rgba(156, 216, 255, .5)\",\n  },\n  sortFocus: {\n    default: \"rgba(156, 216, 255, .54)\",\n  },\n});\n\nconst RecipientsDataTable = (props) => {\n  const columns = [\n    {\n      name: \"Address\",\n      selector: \"address\",\n      sortable: true,\n      grow: 3.8,\n    },\n    {\n      name: \"Amount, \" + props.tokenSymbol,\n      selector: \"balance\",\n      sortable: true,\n      left: true,\n    },\n  ];\n\n  const customStyles = {\n    pagination: {\n      style: {\n        marginBottom: \"20px\",\n      },\n    },\n    cells: {\n      style: {\n        fontFamily: \"monospace\",\n      },\n    },\n  };\n\n  return (\n    <DataTable\n      title=\"List of recipients\"\n      columns={columns}\n      theme=\"solarized\"\n      customStyles={customStyles}\n      pagination\n      paginationPerPage={10}\n      data={props.data}\n      paginationTotalRows={props.data.length}\n    />\n  );\n};\n\n@inject(\"UiStore\")\n@observer\nexport class ThirdStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.txStore = props.UiStore.txStore;\n    this.web3Store = props.UiStore.web3Store;\n    this.mainTokenName =\n      props.UiStore.web3Store.netId === \"97\"\n        ? \"tBNB\"\n        : props.UiStore.web3Store.netId === \"56\"\n        ? \"BNB\"\n        : \"ETH\";\n    this.gasPriceStore = props.UiStore.gasPriceStore;\n    console.log(this.gasPriceStore.gasPricesArray);\n    this.state = {\n      gasPrice: \"\",\n      transferGas: 0,\n      approveGas: 0,\n      multisendGas: 0,\n    };\n    this.gasSharesArray = [\n      { label: \"10%\", value: \"10\" },\n      { label: \"20%\", value: \"20\" },\n      { label: \"50%\", value: \"50\" },\n      { label: \"70%\", value: \"70\" },\n      { label: \"100%\", value: \"100\" },\n    ];\n\n    this.props.addNextHandler(this.onNext);\n  }\n  componentDidMount() {\n    if (this.tokenStore.dublicates.length > 0) {\n      swal({\n        title: `There were duplicated ${this.mainTokenName} addresses in your list.`,\n        text: `${JSON.stringify(\n          this.tokenStore.dublicates.slice(),\n          null,\n          \"\\n\"\n        )}.\\n Multisender already combined the balances for those addreses. Please make sure it did the calculation correctly.`,\n        icon: \"warning\",\n      });\n    }\n    (async () => {\n      try {\n        const transferGas = await this.txStore.getTransferGas({\n          slice: this.tokenStore.totalNumberTx,\n          addPerTx: this.tokenStore.arrayLimit,\n        });\n        this.setState({ transferGas });\n        if (\n          \"0x000000000000000000000000000000000000bEEF\" ===\n          this.tokenStore.tokenAddress\n        ) {\n          // Ether\n          const multisendGasOrig = await this.txStore.getMultisendGas({\n            slice: this.tokenStore.totalNumberTx,\n            addPerTx: this.tokenStore.arrayLimit,\n          });\n          // Gas Limit: 84,279\n          // Gas Used by Transaction: 82,164 (97.49%)\n          const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.975);\n          this.setState({ multisendGas });\n          this.updateCurrentFee();\n        } else {\n          if (\n            parseFloat(this.tokenStore.allowance) >=\n            parseFloat(this.tokenStore.totalBalance)\n          ) {\n            const multisendGasOrig = await this.txStore.getMultisendGas({\n              slice: this.tokenStore.totalNumberTx,\n              addPerTx: this.tokenStore.arrayLimit,\n            });\n            // Gas Limit: 116,153\n            // Gas Used by Transaction: 81,933 (70.54%) for ERC20\n            // Gas Limit: 170,018\n            // Gas Used by Transaction: 135,628 (79.77%) for ERC777 // TODO: detect token type\n            const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.71);\n            const approveGas = await this.txStore.getApproveTxGas();\n            this.setState({ multisendGas, approveGas });\n            this.updateCurrentFee();\n          } else {\n            const approveGasOrig = await this.txStore.getApproveGas();\n            // Gas Limit: 66,181\n            // Gas Used by Transaction: 44,121 (66.67%)\n            const approveGas = Math.floor(parseInt(approveGasOrig) * 0.6667);\n            this.setState({ approveGas });\n          }\n        }\n      } catch (ex) {\n        console.log(\"3:\", ex);\n      }\n    })();\n  }\n\n  updateCurrentFee() {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      this._updateCurrentFeeImpl();\n    }, 0);\n  }\n\n  _updateCurrentFeeImpl() {\n    const { multisendGas, approveGas, transferGas } = this.state;\n    const gasPrice = this.gasPriceStore.standardInHex;\n    const approvePlusMultisendGas = new BN(multisendGas).plus(\n      new BN(approveGas)\n    );\n    if (approvePlusMultisendGas.gt(new BN(transferGas))) {\n      // no savings\n      this.tokenStore.setCurrentFee(\"0\");\n      return;\n    }\n    const savedGas = new BN(transferGas).minus(approvePlusMultisendGas);\n    const savedGasEthValue = new BN(gasPrice).times(savedGas);\n    const savedGasPerTxEthValue = savedGasEthValue.div(\n      this.tokenStore.totalNumberTx\n    );\n    const newCurrentFee = savedGasPerTxEthValue\n      .times(new BN(parseInt(this.gasPriceStore.selectedGasShare)))\n      .div(100);\n    const newCurrentFeeRounded = newCurrentFee.dp(0, 1);\n    this.tokenStore.setCurrentFee(newCurrentFeeRounded.toString(10));\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"inspect\" !== wizard.step.id) {\n      return;\n    }\n\n    try {\n      if (\n        new BN(this.tokenStore.totalBalance).gt(\n          new BN(this.tokenStore.defAccTokenBalance)\n        )\n      ) {\n        console.error(\"Your balance is less than total to send\");\n        swal({\n          title: \"Insufficient token balance\",\n          text: `You don't have enough tokens to send to all addresses.\\nAmount needed: ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`,\n          icon: \"error\",\n        });\n        return;\n      }\n      const multisendGasEthValue = this.getMultisendPlusApproveGasEthValue();\n      const ethBalanceWei = Web3Utils.toWei(\n        this.tokenStore.ethBalance,\n        \"ether\"\n      );\n      if (multisendGasEthValue.gt(new BN(ethBalanceWei))) {\n        const displayMultisendGasEthValue = parseFloat(\n          Web3Utils.fromWei(multisendGasEthValue.toString())\n        ).toFixed(5);\n        console.error(\"please fund you account in \");\n        swal({\n          title: `Insufficient ${this.mainTokenName} balance`,\n          text: `You don't have enough ${this.mainTokenName} to send to all addresses. Amount needed: ${displayMultisendGasEthValue} ${this.mainTokenName}`,\n          icon: \"error\",\n        });\n        return;\n      }\n      if (\n        \"0x000000000000000000000000000000000000bEEF\" ===\n        this.tokenStore.tokenAddress\n      ) {\n        // Ether\n        wizard.push(\"multisend\");\n      } else {\n        if (\n          new BN(this.tokenStore.allowance).gte(\n            new BN(this.tokenStore.totalBalance)\n          )\n        ) {\n          wizard.push(\"multisend\");\n        } else {\n          wizard.push(\"approve\");\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      swal({\n        title: \"Parsing Error\",\n        text: e.message,\n        icon: \"error\",\n      });\n    }\n  };\n\n  onGasPriceChange = (selected) => {\n    if (selected) {\n      this.gasPriceStore.setSelectedGasPrice(selected.value);\n      this.updateCurrentFee();\n    }\n  };\n\n  onGasShareChange = (selected) => {\n    if (selected) {\n      this.gasPriceStore.setSelectedGasShare(selected.value);\n      this.updateCurrentFee();\n    }\n  };\n\n  renderTokenBalance() {\n    if (\n      \"0x000000000000000000000000000000000000bEEF\" ===\n      this.tokenStore.tokenAddress\n    ) {\n      return null;\n    }\n    const value = parseFloat(this.tokenStore.defAccTokenBalance);\n    let displayValue = value.toFixed(5);\n    if (\"0.00000\" === displayValue) {\n      displayValue = value;\n    }\n    return (\n      <div className=\"send-info-i\">\n        <p>Balance, {this.tokenStore.tokenSymbol}</p>\n        <p className=\"send-info-amount\">{displayValue}</p>\n      </div>\n    );\n  }\n\n  renderTokenAllowance() {\n    if (\n      \"0x000000000000000000000000000000000000bEEF\" ===\n      this.tokenStore.tokenAddress\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"send-info-i\">\n        <p>Allowance, {this.tokenStore.tokenSymbol}</p>\n        <p className=\"send-info-amount\">{this.tokenStore.allowance}</p>\n      </div>\n    );\n  }\n\n  renderTransferGasInfo() {\n    const gasPrice = this.gasPriceStore.standardInHex;\n    const transferEthValue = new BN(gasPrice).times(\n      new BN(this.state.transferGas)\n    );\n    const displayTransferEthValue = parseFloat(\n      Web3Utils.fromWei(transferEthValue.toString())\n    ).toFixed(5);\n    if (\n      \"0x000000000000000000000000000000000000bEEF\" ===\n      this.tokenStore.tokenAddress\n    ) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Gas spent without Multisend, {this.mainTokenName}</p>\n          <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n        </div>\n      );\n    } else {\n      if (\n        new BN(this.tokenStore.allowance).gte(\n          new BN(this.tokenStore.totalBalance)\n        )\n      ) {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent without Multisend, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent without Multisend, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\n          </div>\n        );\n      }\n    }\n  }\n\n  getMultisendPlusApproveGasEthValue() {\n    const gasPrice = this.gasPriceStore.standardInHex;\n    const approvePlusMultisendGas = new BN(this.state.multisendGas).plus(\n      new BN(this.state.approveGas)\n    );\n    const multisendGasEthValue = new BN(gasPrice).times(\n      approvePlusMultisendGas\n    );\n    return multisendGasEthValue;\n  }\n\n  renderMultisendGasInfo() {\n    const gasPrice = this.gasPriceStore.standardInHex;\n    const approvePlusMultisendGas = new BN(this.state.multisendGas).plus(\n      new BN(this.state.approveGas)\n    );\n    const multisendGasEthValue = new BN(gasPrice).times(\n      approvePlusMultisendGas\n    );\n    const displayMultisendGasEthValue = parseFloat(\n      Web3Utils.fromWei(multisendGasEthValue.toString())\n    ).toFixed(5);\n    if (\n      \"0x000000000000000000000000000000000000bEEF\" ===\n      this.tokenStore.tokenAddress\n    ) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Gas spent with Multisend, {this.mainTokenName}</p>\n          <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\n        </div>\n      );\n    } else {\n      if (\n        new BN(this.tokenStore.allowance).gte(\n          new BN(this.tokenStore.totalBalance)\n        )\n      ) {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent with Multisend, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Gas spent with Multisend, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">N/A</p>\n          </div>\n        );\n      }\n    }\n  }\n\n  renderSavingsGasInfo() {\n    const { multisendGas, approveGas, transferGas } = this.state;\n    const gasPrice = this.gasPriceStore.standardInHex;\n    const transferEthValue = new BN(gasPrice).times(\n      new BN(this.state.transferGas)\n    );\n    const displayTransferEthValue = Web3Utils.fromWei(\n      transferEthValue.toString()\n    );\n    // const approveGasEthValue = new BN(gasPrice).times(new BN(this.state.approveGas))\n    // const displayApproveGasEthValue = Web3Utils.fromWei(approveGasEthValue.toString())\n    const approvePlusMultisendGas = new BN(multisendGas).plus(\n      new BN(approveGas)\n    );\n    const multisendGasEthValue = new BN(gasPrice).times(\n      approvePlusMultisendGas\n    );\n    const displayMultisendGasEthValue = Web3Utils.fromWei(\n      multisendGasEthValue.toString()\n    );\n    const savedGas = new BN(transferGas).minus(approvePlusMultisendGas);\n    const savedGasEthValue = new BN(gasPrice).times(savedGas);\n    const displaySavedGasEthValue = parseFloat(\n      Web3Utils.fromWei(savedGasEthValue.toString())\n    ).toFixed(5);\n    let sign = \"\";\n    // if (approvePlusMultisendGas.gt(new BN(transferGas))) {\n    //   sign = \"-\"\n    // }\n    if (\n      \"0x000000000000000000000000000000000000bEEF\" ===\n      this.tokenStore.tokenAddress\n    ) {\n      // Ether\n      return (\n        <div className=\"send-info-i\">\n          <p>Your gas savings, {this.mainTokenName}</p>\n          <p className=\"send-info-amount\">\n            {sign}\n            {displaySavedGasEthValue}\n          </p>\n        </div>\n      );\n    } else {\n      if (\n        new BN(this.tokenStore.allowance).gte(\n          new BN(this.tokenStore.totalBalance)\n        )\n      ) {\n        return (\n          <div className=\"send-info-i\">\n            <p>Your gas savings, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">\n              {sign}\n              {displaySavedGasEthValue}\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"send-info-i\">\n            <p>Your gas savings, {this.mainTokenName}</p>\n            <p className=\"send-info-amount\">N/A</p>\n          </div>\n        );\n      }\n    }\n  }\n\n  render() {\n    console.log(this.web3Store.netId);\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <ol>\n              <li>Verify addresses and values</li>\n              <li>\n                Press the <strong>Next</strong> button\n              </li>\n            </ol>\n            <p style={{ display: \"none\" }}>\n              <strong>Gas Sharing</strong> is a portion of gas saved by this\n              service that you are OK to tip\n            </p>\n          </div>\n          <Form className=\"form\">\n            <div className=\"form-inline\" style={{ display: \"none\" }}>\n              <div className=\"form-inline-i form-inline-i_gas-price\">\n                <label htmlFor=\"gas-price\" className=\"multisend-label\">\n                  Network Speed (Gas Price)\n                </label>\n                <Select.Creatable\n                  isLoading={this.gasPriceStore.loading}\n                  name=\"gas-price\"\n                  id=\"gas-price\"\n                  value={this.gasPriceStore.selectedGasPrice}\n                  onChange={this.onGasPriceChange}\n                  loadingPlaceholder=\"Fetching gas Price data ...\"\n                  placeholder=\"Please select desired network speed\"\n                  options={this.gasPriceStore.gasPricesArray.slice()}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-inline\" style={{ display: \"none\" }}>\n              <div className=\"form-inline-i form-inline-i_gas-sharing\">\n                <label htmlFor=\"gas-sharing\" className=\"multisend-label\">\n                  Saved Gas Sharing\n                </label>\n                <Select.Creatable\n                  isLoading={false}\n                  name=\"gas-sharing\"\n                  id=\"gas-sharing\"\n                  value={this.gasPriceStore.selectedGasShare}\n                  onChange={this.onGasShareChange}\n                  loadingPlaceholder=\"\"\n                  placeholder=\"Please select desired gas sharing\"\n                  options={this.gasSharesArray.slice()}\n                />\n              </div>\n            </div>\n          </Form>\n          <div className=\"send-info\" style={{ padding: \"15px 0px\" }}>\n            <div className=\"send-info-side\">\n              <div className=\"send-info-i\">\n                <p>Total to be Sent, {this.tokenStore.tokenSymbol}</p>\n                <p className=\"send-info-amount\">\n                  {this.tokenStore.totalBalance}\n                </p>\n              </div>\n              {this.renderTokenBalance()}\n              {/* {this.renderTransferGasInfo()} */}\n              <div className=\"send-info-i\">\n                <p>Total Number of tx Needed</p>\n                <p className=\"send-info-amount\">\n                  {this.tokenStore.totalNumberTx}\n                </p>\n              </div>\n            </div>\n            <div className=\"send-info-side\">\n              {this.renderTokenAllowance()}\n              <div className=\"send-info-i\">\n                <p>Balance, {this.mainTokenName}</p>\n                <p className=\"send-info-amount\">{this.tokenStore.ethBalance}</p>\n              </div>\n              {/* {this.renderMultisendGasInfo()} */}\n              {/* {this.renderSavingsGasInfo()} */}\n            </div>\n          </div>\n          <RecipientsDataTable\n            data={this.tokenStore.addressesData}\n            tokenSymbol={this.tokenStore.tokenSymbol}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\n\n@inject(\"UiStore\")\n@observer\nexport class Transaction extends React.Component {\n  render () {\n    const { tx, explorerUrl } = this.props\n    const { name, hash, status } = tx;\n    let classname;\n    switch(status){\n      case 'mined':\n        classname = 'table-td_check-hash_done'\n        break;\n      case 'error':\n        classname = 'table-td_check-hash_error'\n        break;\n      case 'pending':\n        classname = 'table-td_check-hash_wait'\n        break;\n      default:\n        classname = 'table-td_check-hash_wait'\n    }\n    // const classname = status === 'mined' ? 'table-td_check-hash_done' : 'table-td_check-hash_wait'\n    return (\n      <div className=\"table-tr\">\n        <div className={`table-td table-td_check-hash ${classname}`}>\n          TxHash: <a target=\"_blank\" href={`${explorerUrl}/tx/${hash}`}>{hash}</a> <br/> {name} <br/> Status: {status}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport { Transaction } from \"./Transaction\"\n\n@inject(\"UiStore\")\n@observer\nexport class ApproveStep extends React.Component {\n  constructor(props){\n    super(props);\n    this.props = props\n    this.txStore = props.UiStore.txStore;\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\n    this.intervalId = null\n    this.state = {\n      txs: this.txStore.txs,\n    }\n\n    this.props.addNextHandler(this.onNext)\n  }\n  componentDidMount(){\n    (async () => {\n      try {\n        await this.txStore.doApprove()\n        this.setState({txs: this.txStore.txs})\n      } catch(e){\n        console.log('doApprove error:', e)\n      }\n    })()\n    if (null === this.intervalId) {\n      this.intervalId = setInterval(() => {\n        this.setState({txs: this.txStore.txs})\n      }, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    if (null !== this.intervalId) {\n      clearInterval(this.intervalId)\n      this.intervalId = null\n    }\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"approve\" !== wizard.step.id) {\n      return\n    }\n\n    wizard.push(\"inspect\")\n  }\n\n  render () {\n    const { txs } = this.state\n    const txHashes = txs.map((tx, index) => {\n      return <Transaction key={index} tx={{...tx}} explorerUrl={this.explorerUrl}/>\n    })\n    const mined = txs.reduce((mined, tx) => {\n      const { status } = tx\n      return mined && status === \"mined\"\n    }, true)\n    let status;\n    if(txs.length > 0){\n      if (mined) {\n        status =  \"Approve transaction is mined. Press the Next button to continue\"\n      } else {\n        status = \"Approve transaction was sent out. Now wait until it is mined\"\n      }\n    } else {\n      status = `Waiting for you to sign an Approve transaction in Metamask`\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <div>\n              Sign an Approve transaction in MetaMask<br />to send tokens to many recipients from the Multisend smart contract\n            </div>\n            <p>&nbsp;</p>\n            <ol>\n              <li>Confirm Approve transaction in MetaMask</li>\n              <li>Wait for the transaction to be mined</li>\n              <li>Press the <strong>Next</strong> button</li>\n            </ol>\n          </div>\n          <form className=\"form\">\n            <p>{status}</p>\n            <div className=\"table\">\n              {txHashes}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { Transaction } from \"./Transaction\";\n\n@inject(\"UiStore\")\n@observer\nexport class FourthStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.txStore = props.UiStore.txStore;\n    this.tokenStore = props.UiStore.tokenStore;\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\n    this.intervalId = null;\n    this.state = {\n      txs: this.txStore.txs,\n      totalNumberOftx: this.calcTotalNumberOftx(),\n    };\n    this.doSendExecuted = false;\n\n    this.props.addNextHandler(this.onNext);\n  }\n\n  onNext = async (wizard) => {\n    // console.log(wizard.step)\n    if (\"multisend\" !== wizard.step.id) {\n      return;\n    }\n\n    // reload page to make sure that all caches are cleared\n    location.reload();\n  };\n\n  componentDidMount() {\n    (async () => {\n      try {\n        if (!this.doSendExecuted) {\n          this.doSendExecuted = true;\n          await this.txStore.doSend();\n          this.setState({\n            txs: this.txStore.txs,\n            totalNumberOftx: this.calcTotalNumberOftx(),\n          });\n        }\n      } catch (e) {\n        console.log(\"doApprove error:\", e);\n      }\n    })();\n    if (null === this.intervalId) {\n      this.intervalId = setInterval(() => {\n        this.setState({\n          txs: this.txStore.txs,\n          totalNumberOftx: this.calcTotalNumberOftx(),\n        });\n      }, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    if (null !== this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  calcTotalNumberOftx() {\n    let totalNumberOftx;\n\n    // if(Number(this.tokenStore.totalBalance) > Number(this.tokenStore.allowance)){\n    //   totalNumberOftx = Number(this.tokenStore.totalNumberTx) + 1;\n    // } else {\n    totalNumberOftx = Number(this.tokenStore.totalNumberTx);\n    // }\n    return totalNumberOftx;\n  }\n\n  render() {\n    const { txs, totalNumberOftx } = this.state;\n    const txHashes = txs.map((tx, index) => {\n      return (\n        <Transaction\n          key={index}\n          tx={{ ...tx }}\n          explorerUrl={this.explorerUrl}\n        />\n      );\n    });\n    const mined = txs.reduce((mined, tx) => {\n      const { status } = tx;\n      return mined && status === \"mined\";\n    }, true);\n    let status;\n    if (txs.length === totalNumberOftx) {\n      if (mined) {\n        status = \"All transactions are mined. Congratulations!\";\n      } else {\n        status =\n          \"Transactions were sent out. Now wait until all transactions are mined.\";\n      }\n    } else {\n      const txCount = totalNumberOftx - txs.length;\n      status = `Waiting for you to sign transaction in Metamask (Don't close)`;\n      if (totalNumberOftx > 1) {\n        status = `Waiting for you to sign ${txCount} transactions in Metamask (Don't close)`;\n      }\n    }\n    let label = \"Sign a multisend transaction in MetaMask\";\n    if (totalNumberOftx > 1) {\n      label = `Sign all ${totalNumberOftx} multisend transactions in MetaMask`;\n    }\n    let label2 =\n      \"to send tokens to many recipients from the Multisend smart contract\";\n    if (\"ETH\" === this.tokenStore.tokenSymbol) {\n      label2 =\n        \"to send ETH to many recipients from the Multisend smart contract\";\n    }\n    return (\n      <div>\n        <div>\n          <div className=\"description\">\n            <div>\n              {label}\n              <br />\n              {label2}\n            </div>\n            <p>&nbsp;</p>\n            <ol>\n              <li>Confirm all multisend transactions in MetaMask</li>\n              <li>Wait for all transactions to be mined</li>\n              <li>Check transactions on etherscan</li>\n              <li>\n                Press the <strong>Next</strong> button\n              </li>\n            </ol>\n          </div>\n          <form className=\"form\">\n            <p>{status}</p>\n            <div className=\"table\">{txHashes}</div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class FifthStep extends React.Component {\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\n        <div className=\"content\">\n          <div className=\"transactions-title\">\n            <h1 className=\"title\"><strong>Table Name</strong></h1>\n            <p className=\"title\">Total: <strong>3789.093 ETH</strong></p>\n          </div>\n          <div className=\"table\">\n            <div className=\"table-tr table-tr_title\">\n              <div className=\"table-td\">Token Name</div>\n              <div className=\"table-td\">Address</div>\n              <div className=\"table-td\">Amount</div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 1</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\n              </div>\n              <div className=\"table-td\">\n                <p>2.5672 ETH</p>\n              </div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 2</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\n              </div>\n              <div className=\"table-td\">\n                <p>8.009 ETH</p>\n              </div>\n            </div>\n          </div>\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { inject, observer } from \"mobx-react\";\nimport swal from 'sweetalert';\nimport { Link } from 'react-router-dom';\nimport generateElement from '../generateElement'\n\n@inject(\"UiStore\")\n@observer\nexport class Retry extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onTxInput = this.onTxInput.bind(this)\n    this.txStore = props.UiStore.txStore;\n    \n    this.state = {\n      txHash: ''\n    }\n  }\n  \n  onTxInput(e){\n    const txHash = e.target.value;\n    setTimeout(async () => {\n      if(txHash.length === 66){\n        // https://kovan.etherscan.io/tx/0x234cb7950c9239ce64033647e14b8fdd915106cad24c8ae57b0eb9052e8ec79a\n        const txdata = await this.txStore.getTxReceipt(txHash);\n        console.log(txdata)\n        this.setState({txHash})\n      } else {\n        swal({\n          content: generateElement(`Tx Hash is not valid`),\n          icon: \"error\",\n        })\n      }\n\n    }, 750)\n  }\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\n        <div className=\"content\">\n          <div className=\"table\">\n            <label htmlFor=\"txhash\" className=\"multisend-label\">Transaction Hash</label>\n            <input onChange={this.onTxInput} type=\"text\" className=\"input\" id=\"txhash\"/>\n            <div className=\"table-tr table-tr_title\">\n              <div className=\"table-td\">Token Name</div>\n              <div className=\"table-td\">Address</div>\n              <div className=\"table-td\">Amount</div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 1</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\n              </div>\n              <div className=\"table-td\">\n                <p>2.5672 ETH</p>\n              </div>\n            </div>\n            <div className=\"table-tr\">\n              <div className=\"table-td\">\n                <p>Name 2</p>\n              </div>\n              <div className=\"table-td\">\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\n              </div>\n              <div className=\"table-td\">\n                <p>8.009 ETH</p>\n              </div>\n            </div>\n          </div>\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Welcome extends React.Component {\n  render () {\n    return (\n      <div className=\"multisend-container multisend-container_bg\">\n        <div className=\"content\">\n          <h1 className=\"title\"><strong>Welcome to Token</strong> MultiSender</h1>\n          <p className=\"description\">\n            Desc youtube video how to use multisender\n          </p>\n          <p>\n            Already have JSON or CSV prepared?\n          </p>\n          <Link className=\"button button_next\" to='/1'>Proceed for JSON/CSV</Link>\n\n          <p>\n            Transaction Wizard. Build a list of addresses and balances using UI.\n          </p>\n          <Link className=\"button button_next\" to='/1'>Proceed for Transaction Wizard</Link>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { WithWizard } from 'react-albus';\n\nconst Navigation = () => (\n  <WithWizard\n    render={({ next, previous, step, steps, push }) => (\n      <div className=\"multisend-buttons\">\n        {(\"home\" !== step.id && \"multisend\" !== step.id) && (\n          <button className=\"multisend-button multisend-button_prev\" onClick={previous}>\n            Back\n          </button>\n        )}\n\n        {\"multisend\" === step.id && (\n          <button className=\"multisend-button multisend-button_prev\" onClick={next}>\n            Home\n          </button>\n        )}\n\n        {\"multisend\" !== step.id && (\n          <button className=\"multisend-button multisend-button_next\" onClick={next}>\n            Next\n          </button>\n        )}\n      </div>\n    )}\n  />\n);\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport {\n  Header,\n  FirstStep,\n  SecondStep,\n  ThirdStep,\n  ApproveStep,\n  FourthStep,\n  FifthStep,\n  Retry,\n  Welcome,\n} from \"./components\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { inject } from \"mobx-react\";\nimport \"./assets/stylesheets/application.css\";\nimport Navigation from \"./components/Navigation\";\nimport { Wizard, Steps, Step } from \"react-albus\";\nimport { Line } from \"rc-progress\";\nimport { PulseLoader } from \"react-spinners\";\n\n// const RoutedWizard = ({ children }) =>\n//   <Route\n//     render={({ history, match: { url } }) =>\n//       <Wizard history={history} basename={url}>\n//         {children}\n//       </Wizard>}\n//   />;\n\n// const PrivateRoute = ({ component: Component, startedUrl, ...rest }) => (\n//   <Route\n//     {...rest}\n//     render={props =>\n//       startedUrl === '#/' || startedUrl === '#/1' ? (\n//         <Component {...props} />\n//       ) : (\n//         <Redirect\n//           to={{\n//             pathname: \"/\"\n//           }}\n//         />\n//       )\n//     }\n//   />\n// );\n\n@inject(\"UiStore\")\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tokenStore = props.UiStore.tokenStore;\n    this.web3Store = props.UiStore.web3Store;\n    this.nextHandlers = [];\n    this.state = {\n      loading: this.web3Store.loading,\n    };\n  }\n\n  componentDidMount() {\n    (async () => {\n      try {\n        await this.tokenStore.proxyMultiSenderAddress();\n        this.setState((state, props) => {\n          return { loading: this.web3Store.loading };\n        });\n      } catch (ex) {\n        console.log(\"App:\", ex);\n      }\n    })();\n  }\n\n  onNext = (wizard) => {\n    (async () => {\n      try {\n        this.nextHandlers.forEach(async (handler) => {\n          await handler(wizard);\n        });\n      } catch (ex) {\n        console.log(\"onNext:\", ex);\n      }\n    })();\n  };\n\n  addNextHandler = (handler) => {\n    this.nextHandlers.push(handler);\n  };\n\n  render() {\n    const { startedUrl } = this.web3Store;\n    if (!(startedUrl === \"#/\" || startedUrl === \"#/home\")) {\n      this.web3Store.setStartedUrl(\"#/\");\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <Route\n          render={({ history }) => (\n            <Wizard\n              history={history}\n              onNext={this.onNext}\n              render={({ step, steps }) => (\n                <div className=\"multisend-container multisend-container_bg\">\n                  <div className=\"content\">\n                    <h1 className=\"title\">\n                      <strong>Welcome to Bulk Token Transfer Tool</strong>\n                    </h1>\n                    <Line\n                      percent={((steps.indexOf(step) + 1) / steps.length) * 100}\n                      className=\"pad-b\"\n                    />\n                    <div className=\"sweet-loading\">\n                      <PulseLoader\n                        color={\"#123abc\"}\n                        loading={this.state.loading}\n                      />\n                    </div>\n                    <TransitionGroup>\n                      <CSSTransition\n                        key={step.id}\n                        classNames=\"multisend\"\n                        timeout={{ enter: 500, exit: 500 }}\n                      >\n                        <Steps key={step.id} step={step.id ? step : undefined}>\n                          <Step id=\"home\">\n                            <FirstStep addNextHandler={this.addNextHandler} />\n                          </Step>\n                          <Step id=\"inspect\">\n                            <ThirdStep addNextHandler={this.addNextHandler} />\n                          </Step>\n                          <Step id=\"approve\">\n                            <ApproveStep addNextHandler={this.addNextHandler} />\n                          </Step>\n                          <Step id=\"multisend\">\n                            <FourthStep addNextHandler={this.addNextHandler} />\n                          </Step>\n                        </Steps>\n                      </CSSTransition>\n                    </TransitionGroup>\n                    <Navigation />\n                  </div>\n                </div>\n              )}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n","import { action, observable } from \"mobx\";\nimport getWeb3 from '../getWeb3';\nimport Web3 from 'web3';\n\nclass Web3Store {\n  @observable web3 = {};\n  @observable defaultAccount = '';\n  @observable loading = true;\n  @observable errors = [];\n  @observable userTokens = [];\n  @observable explorerUrl = '';\n  @observable startedUrl = window.location.hash\n  constructor(rootStore) {\n    this.userTokensInitialized = false\n  }\n  @action\n  setExplorerUrl(url) {\n    this.explorerUrl = url\n  }\n  @action\n  setStartedUrl(url) {\n    this.startedUrl = url;\n  }\n\n  async getWeb3Promise() {\n    return getWeb3().then(async (web3Config) => {\n      if ('' !== this.explorerUrl) {\n        return this\n      }\n      const { web3Instance, defaultAccount, netId, netIdName } = web3Config;\n      this.defaultAccount = defaultAccount;\n      // this.web3 = new Web3(web3Instance.currentProvider);\n      this.web3 = web3Instance;\n      this.netId = netId;\n      this.netIdName = netIdName;\n      await this.getUserTokens(web3Config)\n      this.setExplorerUrl(web3Config.explorerUrl)\n      console.log('web3 loaded')\n      return this\n    }).catch((e) => {\n      console.error(e, 'web3 not loaded')\n      this.errors.push(e.message)\n      throw e\n    })\n  }\n\n  async getUserTokens({ trustApiName, defaultAccount }) {\n    return new Promise((resolve, reject) => {\n      if (this.userTokensInitialized) {\n        resolve(this)\n        return\n      }\n\n\n      const blockchain_network = this.netIdName.toLowerCase()\n      let api_suffix = '';\n      let api_domain = '';\n      let etherscanApiKey = '';\n      if (('mainnet' === blockchain_network) || ('matic' === blockchain_network)) {\n        api_suffix = '';\n      } else {\n        api_suffix = '-' + blockchain_network\n      }\n\n      if (('mumbai' === blockchain_network) || ('matic' === blockchain_network)) {\n        api_domain = \"polygonscan.com\";\n        etherscanApiKey = process.env[\"REACT_APP_PROXY_MULTISENDER_POLYSCAN_API_KEY\"]\n      } else {\n        api_domain = \"etherscan.io\";\n        etherscanApiKey = process.env[\"REACT_APP_PROXY_MULTISENDER_ETHERSCAN_API_KEY\"]\n      }\n\n      let apiHref = `https://api${api_suffix}.${api_domain}`\n\n      if(blockchain_network.indexOf('bsc')>-1){\n        apiHref = trustApiName;\n        etherscanApiKey = process.env[\"REACT_APP_PROXY_MULTISENDER_BSCSCAN_API_KEY\"]\n      }\n\n      window.fetch(\n        `${apiHref}/api?module=account&action=tokentx&address=${defaultAccount}&startblock=0&endblock=999999999&sort=desc&apikey=${etherscanApiKey}`\n      ).then((res) => {\n        return res.json()\n      }).then((res) => {\n        if (!(res.result && (typeof res.result === \"object\") && res.result.hasOwnProperty(\"length\"))) {\n          this.loading = false;\n          reject(\"Failed to load user tokens. Try again a minute later please.\")\n          return\n        }\n        let tokens = res.result.filter(tx => {\n          if (!tx.hasOwnProperty(\"to\") || tx[\"to\"].toLowerCase() != defaultAccount.toLowerCase()) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"contractAddress\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenName\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenSymbol\")) {\n            return false\n          }\n          if (!tx.hasOwnProperty(\"tokenDecimal\")) {\n            return false\n          }\n          return true\n        }).map(tx => {\n          const tokenAddress = tx[\"contractAddress\"];\n          const tokenName = tx[\"tokenName\"];\n          const tokenSymbol = tx[\"tokenSymbol\"];\n          const tokenDecimal = tx[\"tokenDecimal\"];\n          return { label: `${tokenSymbol} - ${tokenAddress}`, value: tokenAddress, tokenSymbol }\n        })\n        let tokensUniqueObj = {}\n        for (let i = 0; i < tokens.length; i++) {\n          let token = tokens[i]\n          tokensUniqueObj[token.value] = token\n        }\n        let tokensUnique = Object.keys(tokensUniqueObj).map(tokenAddress => tokensUniqueObj[tokenAddress])\n\n\n        if (('mumbai' === blockchain_network) || ('matic' === blockchain_network)) {\n          tokensUnique.unshift({\n            value: '0x000000000000000000000000000000000000bEEF',\n            label: \"MATIC - Polygon Native Currency\"\n          })\n        } else if(blockchain_network.indexOf('bsc')>-1){\n          tokensUnique.unshift({\n            value: '0x000000000000000000000000000000000000bEEF',\n            label: \"BNB - BSC Native Currency\"\n          })\n        }else {\n          tokensUnique.unshift({\n            value: '0x000000000000000000000000000000000000bEEF',\n            label: \"ETH - Ethereum Native Currency\"\n          })\n        }\n        this.userTokens = tokensUnique;\n        this.userTokensInitialized = true\n        this.loading = false;\n        resolve(this)\n      }).catch((e) => {\n        this.loading = false;\n        console.error(e);\n        reject(e)\n      })\n    })\n  }\n}\n\nexport default Web3Store;\n","import { action, observable, computed } from \"mobx\";\nimport ERC20ABI from \"../abis/ERC20ABI.json\";\n// import StormMultiSenderABI from '../abis/StormMultisender.json'\nimport Web3Utils from \"web3-utils\";\n\nconst BN = require(\"bignumber.js\");\nfunction add(a, b) {\n  return new BN(a).plus(new BN(b));\n}\nclass TokenStore {\n  @observable decimals = \"\";\n  @observable jsonAddresses = [];\n  @observable tokenAddress = \"\";\n  @observable defAccTokenBalance = \"\";\n  @observable allowance = \"\";\n  @observable currentFee = \"0\";\n  @observable tokenSymbol = \"\";\n  @observable ethBalance = \"\";\n  @observable balances_to_send = [];\n  @observable addresses_to_send = [];\n  @observable invalid_addresses = [];\n  @observable filteredAddresses = [];\n  @observable totalBalance = \"0\";\n  @observable arrayLimit = 0;\n  @observable errors = [];\n  @observable dublicates = [];\n\n  constructor(rootStore) {\n    this.web3Store = rootStore.web3Store;\n    this.gasPriceStore = rootStore.gasPriceStore;\n  }\n\n  async proxyMultiSenderAddress() {\n    try {\n      const web3Obj = await this.web3Store.getWeb3Promise();\n      const netIdEnvVarName =\n        \"REACT_APP_PROXY_MULTISENDER_\" + web3Obj.netIdName.toUpperCase();\n      const contractAddress = process.env[netIdEnvVarName];\n      return contractAddress;\n    } catch (ex) {\n      console.log(ex);\n    }\n    return \"\";\n  }\n\n  @action\n  async getDecimals(address) {\n    if (\"\" !== this.decimals) {\n      return this.decimals;\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, address);\n      this.decimals = await token.methods.decimals().call();\n      return this.decimals;\n    } catch (e) {\n      this.errors.push(\n        \"Cannot get decimals for token contract.\\n Please make sure you are on the right network and token address exists\"\n      );\n      console.error(\"Get Decimals\", e);\n    }\n  }\n\n  async getBalance() {\n    if (\"\" !== this.defAccTokenBalance) {\n      return this.defAccTokenBalance;\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\n      const defAccTokenBalance = await token.methods\n        .balanceOf(this.web3Store.defaultAccount)\n        .call();\n      this.defAccTokenBalance = new BN(defAccTokenBalance)\n        .div(this.multiplier)\n        .toString(10);\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n        if (err) {\n          console.log(err);\n          return;\n        }\n        const defAccTokenBalance = await token.methods\n          .balanceOf(this.web3Store.defaultAccount)\n          .call();\n        this.defAccTokenBalance = new BN(defAccTokenBalance)\n          .div(this.multiplier)\n          .toString(10);\n      });\n      return this.defAccTokenBalance;\n    } catch (e) {\n      this.errors.push(\n        `${this.web3Store.defaultAccount} doesn't have token balance.\\n Please make sure you are on the right network and token address exists`\n      );\n      console.error(\"getBalance\", e);\n    }\n  }\n  async getEthBalance() {\n    if (\"\" !== this.ethBalance) {\n      return this.ethBalance;\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      let ethBalance = await web3.eth.getBalance(this.web3Store.defaultAccount);\n      ethBalance = Web3Utils.fromWei(ethBalance);\n      this.ethBalance = new BN(ethBalance).toFormat(3);\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n        if (err) {\n          console.log(err);\n          return;\n        }\n        let ethBalance = await web3.eth.getBalance(\n          this.web3Store.defaultAccount\n        );\n        ethBalance = Web3Utils.fromWei(ethBalance);\n        this.ethBalance = new BN(ethBalance).toFormat(3);\n      });\n      return this.ethBalance;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  async getTokenSymbol(tokenAddress) {\n    if (\"\" !== this.tokenSymbol) {\n      return this.tokenSymbol;\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, tokenAddress);\n      this.tokenSymbol = await token.methods.symbol().call();\n      return this.tokenSymbol;\n    } catch (e) {\n      this.errors.push(\n        \"Token with this Address doesnt exist.\\n Please make sure you are on the right network and token address exists\"\n      );\n      console.error(e);\n    }\n  }\n  @action\n  async getAllowance() {\n    if (\"\" !== this.allowance) {\n      return this.allowance;\n    }\n    try {\n      const web3 = this.web3Store.web3;\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\n      const allowance = await token.methods\n        .allowance(\n          this.web3Store.defaultAccount,\n          await this.proxyMultiSenderAddress()\n        )\n        .call();\n      this.allowance = new BN(allowance).div(this.multiplier).toString(10);\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\n        if (err) {\n          console.log(err);\n          return;\n        }\n        const allowance = await token.methods\n          .allowance(\n            this.web3Store.defaultAccount,\n            await this.proxyMultiSenderAddress()\n          )\n          .call();\n        this.allowance = new BN(allowance).div(this.multiplier).toString(10);\n      });\n      return this.allowance;\n    } catch (e) {\n      this.errors\n        .push(`Token address doesn't have allowance method.\\n Please make sure you are on the right network and token address exists.\\n\n         Your account: ${this.web3Store.defaultAccount}`);\n      console.error(\"GetAllowance\", e);\n    }\n  }\n\n  @action\n  async getCurrentFee() {\n    // const currentFee = \"100000000000000\"; // 0.0001 ETH\n    // this.currentFee = Web3Utils.fromWei(currentFee)\n    return this.currentFee;\n    // try {\n    //   this.web3Store.getWeb3Promise().then(async () => {\n    //     const web3 = this.web3Store.web3;\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\n    //     const currentFee = await multisender.methods.currentFee(this.web3Store.defaultAccount).call();\n    //     this.currentFee = Web3Utils.fromWei(currentFee)\n    //     return this.currentFee\n    //   })\n    // }\n    // catch(e){\n    //   console.error('getCurrentFee',e)\n    // }\n  }\n\n  setCurrentFee(currentFee) {\n    this.currentFee = Web3Utils.fromWei(currentFee);\n  }\n\n  async getArrayLimit() {\n    this.arrayLimit = 200;\n    // this.arrayLimit = 1;\n    return this.arrayLimit;\n    // try {\n    //   await this.web3Store.getWeb3Promise().then(async () => {\n    //     const web3 = this.web3Store.web3;\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\n    //     await multisender.methods.arrayLimit().call();\n    //     return this.arrayLimit\n    //   })\n    // }\n    // catch(e){\n    //   console.error('GetArrayLimit', e)\n    // }\n  }\n\n  @action\n  async setTokenAddress(tokenAddress) {\n    await this.web3Store.getWeb3Promise();\n    await this.getCurrentFee();\n    await this.getEthBalance();\n    await this.getArrayLimit();\n    this.decimals = \"\";\n    this.defAccTokenBalance = \"\";\n    this.allowance = \"\";\n    this.tokenSymbol = \"\";\n    if (\n      Web3Utils.isAddress(this.web3Store.defaultAccount) &&\n      tokenAddress !== \"0x000000000000000000000000000000000000bEEF\"\n    ) {\n      this.tokenAddress = tokenAddress;\n      await this.getDecimals(tokenAddress);\n      await this.getBalance();\n      await this.getAllowance();\n      await this.getTokenSymbol(tokenAddress);\n    } else {\n      this.tokenAddress = tokenAddress;\n      this.tokenSymbol = \"ETH\";\n      this.decimals = 18;\n      this.defAccTokenBalance = this.ethBalance;\n    }\n  }\n\n  @action\n  setDecimals(decimals) {\n    this.decimals = decimals;\n  }\n\n  @action\n  setJsonAddresses(addresses) {\n    console.log(\"setJsonAddresses\", addresses);\n    this.jsonAddresses = addresses;\n  }\n\n  @action\n  async reset() {\n    this.decimals = \"\";\n    this.jsonAddresses = [];\n    this.tokenAddress = \"\";\n    this.defAccTokenBalance = \"\";\n    this.allowance = \"\";\n    this.currentFee = \"0\";\n    this.tokenSymbol = \"\";\n    this.ethBalance = \"\";\n    this.balances_to_send = [];\n    this.addresses_to_send = [];\n    this.invalid_addresses = [];\n    this.filteredAddresses = [];\n    this.totalBalance = \"0\";\n    this.arrayLimit = 0;\n    this.errors = [];\n    this.dublicates = [];\n  }\n\n  @action\n  async parseAddresses() {\n    this.addresses_to_send = [];\n    this.dublicates = [];\n    this.totalBalance = 0;\n    this.invalid_addresses = [];\n    this.balances_to_send = [];\n    return new Promise((res, rej) => {\n      try {\n        this.jsonAddresses.forEach((account, index) => {\n          if (Object.keys(account).length === 0) {\n            rej({\n              message: `There was an error parsing ${JSON.stringify(\n                account\n              )} at line ${index}`,\n            });\n          }\n          let address = Object.keys(account)[0]\n            .replace(/\\s/g, \"\")\n            .replace(\"0X\", \"0x\");\n          address = Web3Utils.toChecksumAddress(address);\n          if (!Web3Utils.isAddress(address)) {\n            this.invalid_addresses.push(address);\n          } else {\n            let balance = Object.values(account)[0];\n            this.totalBalance = new BN(balance)\n              .plus(this.totalBalance)\n              .toString(10);\n            // console.log('balance,', balance)\n            balance = this.multiplier.times(balance);\n            const indexAddr = this.addresses_to_send.indexOf(address);\n            if (indexAddr === -1) {\n              this.addresses_to_send.push(address);\n              this.balances_to_send.push(balance.toString(10));\n            } else {\n              if (this.dublicates.indexOf(address) === -1) {\n                this.dublicates.push(address);\n              }\n              this.balances_to_send[indexAddr] = new BN(\n                this.balances_to_send[indexAddr]\n              )\n                .plus(balance)\n                .toString(10);\n            }\n          }\n        });\n\n        this.jsonAddresses = this.addresses_to_send.map((addr, index) => {\n          let obj = {};\n          obj[addr] = new BN(this.balances_to_send[index])\n            .div(this.multiplier)\n            .toString(10);\n          return obj;\n        });\n        res(this.jsonAddresses);\n        if (\n          this.tokenAddress === \"0x000000000000000000000000000000000000bEEF\"\n        ) {\n          this.allowance = this.totalBalance;\n        }\n      } catch (e) {\n        rej(e);\n      }\n    });\n  }\n\n  @computed get totalBalanceWithDecimals() {\n    return new BN(this.totalBalance).times(this.multiplier).toString(10);\n  }\n  @computed get multiplier() {\n    const decimals = Number(this.decimals);\n    return new BN(10).pow(decimals);\n  }\n\n  @computed get totalNumberTx() {\n    return Math.ceil(this.jsonAddresses.length / this.arrayLimit);\n  }\n\n  @computed get addressesData() {\n    return this.jsonAddresses.map((account) => {\n      const address = Object.keys(account)[0].replace(/\\s/g, \"\");\n      const balance = Object.values(account)[0];\n      return { address, balance };\n    });\n  }\n\n  // @computed get totalCostInEth(){\n  //   const standardGasPrice = Web3Utils.toWei(this.gasPriceStore.selectedGasPrice.toString(), 'gwei');\n  //   const currentFeeInWei = Web3Utils.toWei(this.currentFee);\n  //   const tx = new BN(standardGasPrice).times(new BN('5000000'))\n  //   const txFeeMiners = tx.times(new BN(this.totalNumberTx))\n  //   const contractFee = new BN(currentFeeInWei).times(this.totalNumberTx);\n  //\n  //   return Web3Utils.fromWei(txFeeMiners.plus(contractFee).toString(10))\n  // }\n}\n\nexport default TokenStore;\n","import { action, observable, computed } from \"mobx\";\nimport Web3Utils from \"web3-utils\";\n\nclass GasPriceStore {\n  @observable gasPrices = {};\n  @observable loading = true;\n  @observable gasPricesArray = [\n    { label: \"fast\", value: \"21\" },\n    { label: \"standard\", value: \"21\" },\n    { label: \"slow\", value: \"21\" },\n    { label: \"instant\", value: \"21\" },\n  ];\n  @observable selectedGasPrice = \"22\";\n  @observable selectedGasShare = \"10\";\n  gasPricePromise = null;\n  constructor(rootStore) {\n    this.getGasPrices();\n  }\n\n  async getGasPrices() {\n    this.gasPricePromise = fetch(\n      \"https://blockscout.com/eth/mainnet/api/v1/gas-price-oracle\"\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.gasPricesArray.map((v) => {\n          v.value = data[v.label];\n          v.label = `${v.label}: ${data[v.label]} gwei`;\n          return v;\n        });\n        this.selectedGasPrice = data.fast;\n        this.gasPrices = data;\n        this.loading = false;\n      })\n      .catch((e) => {\n        this.loading = true;\n        console.error(\"getGasPrices\", e);\n      });\n  }\n\n  @computed get standardInHex() {\n    console.log(\"standardInHex\", this.selectedGasPrice);\n    const toWei = Web3Utils.toWei((+this.selectedGasPrice).toFixed(), \"gwei\");\n    return Web3Utils.toHex(toWei);\n  }\n  @action\n  setSelectedGasPrice(value) {\n    this.selectedGasPrice = value;\n  }\n\n  @action\n  setSelectedGasShare(value) {\n    this.selectedGasShare = value;\n  }\n}\n\nexport default GasPriceStore;\n","import { action, observable, computed, autorun, toJS } from \"mobx\";\nimport Web3Utils from \"web3-utils\";\nimport ERC20ABI from \"../abis/ERC20ABI.json\";\nimport MultiSenderAbi from \"../abis/StormMultisender.json\";\nimport Web3 from \"web3\";\nimport { observer } from \"mobx-react\";\nimport swal from \"sweetalert\";\nconst BN = require(\"bignumber.js\");\n\nclass TxStore {\n  @observable txs = [];\n  txHashToIndex = {};\n  @observable approval = \"\";\n  constructor(rootStore) {\n    this.tokenStore = rootStore.tokenStore;\n    this.web3Store = rootStore.web3Store;\n    this.gasPriceStore = rootStore.gasPriceStore;\n    this.interval = null;\n  }\n\n  @action\n  async reset() {\n    this.txs = [];\n    this.txHashToIndex = {};\n    this.approval = \"\";\n    this.keepRunning = false;\n    clearInterval(this.interval);\n  }\n\n  @action\n  async doSend() {\n    this.keepRunning = true;\n    this.txs = [];\n    this.approval = \"\";\n    if (\n      new BN(\n        this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance\n      ).gt(\n        new BN(\n          this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance\n        )\n      )\n    ) {\n      this._approve();\n      const interval = setInterval(() => {\n        if (this.approval) {\n          const index = this.txHashToIndex[this.approval];\n          console.log(\n            \"checking autorun\",\n            index,\n            this.approval,\n            this.txHashToIndex,\n            toJS(this.txs)\n          );\n          if (this.txs[index] && this.txs[index].status === \"mined\") {\n            clearInterval(interval);\n            console.log(\n              \"lets GO!\",\n              this.tokenStore.totalNumberTx,\n              this.tokenStore.arrayLimit\n            );\n            setTimeout(() => {\n              this._multisend({\n                slice: this.tokenStore.totalNumberTx,\n                addPerTx: this.tokenStore.arrayLimit,\n              });\n            }, 1000);\n          }\n        } else {\n          console.log(\"checking autorun\", this.txHashToIndex, toJS(this.txs));\n        }\n      }, 3000);\n      this.interval = interval;\n    } else {\n      this._multisend({\n        slice: this.tokenStore.totalNumberTx,\n        addPerTx: this.tokenStore.arrayLimit,\n      });\n    }\n  }\n\n  @action\n  async doApprove() {\n    this.keepRunning = true;\n    this.txs = [];\n    this.approval = \"\";\n    if (\n      new BN(\n        this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance\n      ).gt(\n        new BN(\n          this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance\n        )\n      )\n    ) {\n      this._approve();\n      const interval = setInterval(() => {\n        if (this.approval) {\n          const index = this.txHashToIndex[this.approval];\n          console.log(\n            \"checking autorun\",\n            index,\n            this.approval,\n            this.txHashToIndex,\n            toJS(this.txs)\n          );\n          if (this.txs[index] && this.txs[index].status === \"mined\") {\n            clearInterval(interval);\n            console.log(\"Approve complete\");\n          }\n        } else {\n          console.log(\"checking autorun\", this.txHashToIndex, toJS(this.txs));\n        }\n      }, 3000);\n      this.interval = interval;\n    }\n  }\n\n  async _approve() {\n    const index = this.txs.length;\n    const web3 = this.web3Store.web3;\n    let myGasPrice = await web3.eth.getGasPrice();\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\n    try {\n      return token.methods\n        .approve(\n          await this.tokenStore.proxyMultiSenderAddress(),\n          this.tokenStore.totalBalanceWithDecimals\n        )\n        .send({ from: this.web3Store.defaultAccount, gasPrice: myGasPrice })\n        .once(\"transactionHash\", (hash) => {\n          this.approval = hash;\n          this.txHashToIndex[hash] = index;\n          this.txs[index] = {\n            status: \"pending\",\n            name: `MultiSender Approval to spend ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`,\n            hash,\n          };\n        })\n        .once(\"receipt\", async (receipt) => {\n          await this.getTxStatus(receipt.transactionHash);\n        })\n        .on(\"error\", (error) => {\n          swal(\"Error!\", error.message, \"error\");\n          console.error(error);\n        });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getApproveGas() {\n    const web3 = this.web3Store.web3;\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\n    let encodedData = await token.methods\n      .approve(\n        await this.tokenStore.proxyMultiSenderAddress(),\n        this.tokenStore.totalBalanceWithDecimals\n      )\n      .encodeABI({ from: this.web3Store.defaultAccount });\n    return web3.eth.estimateGas({\n      from: this.web3Store.defaultAccount,\n      data: encodedData,\n      to: this.tokenStore.tokenAddress,\n    });\n  }\n\n  async _getTransferGas(to, value) {\n    const web3 = this.web3Store.web3;\n    const { tokenAddress } = this.tokenStore;\n    if (tokenAddress === \"0x000000000000000000000000000000000000bEEF\") {\n      return web3.eth.estimateGas({\n        from: this.web3Store.defaultAccount,\n        // data: null,\n        value: value,\n        to: to,\n      });\n    } else {\n      const token = new web3.eth.Contract(\n        ERC20ABI,\n        this.tokenStore.tokenAddress\n      );\n      const encodedData = await token.methods\n        .transfer(to, value)\n        .encodeABI({ from: this.web3Store.defaultAccount });\n      return await web3.eth.estimateGas({\n        from: this.web3Store.defaultAccount,\n        data: encodedData,\n        to: this.tokenStore.tokenAddress,\n      });\n    }\n  }\n\n  async getTransferGas() {\n    let totalGas = 0;\n    let { addresses_to_send, balances_to_send } = this.tokenStore;\n    for (let i = 0; i < addresses_to_send.length; i++) {\n      const to = addresses_to_send[i];\n      const value = balances_to_send[i];\n      totalGas += await this._getTransferGas(to, value);\n    }\n    return totalGas;\n  }\n\n  async getMultisendGas({ slice, addPerTx }) {\n    let totalGas = 0;\n\n    const token_address = this.tokenStore.tokenAddress;\n    let { addresses_to_send, balances_to_send, currentFee, totalBalance } =\n      this.tokenStore;\n\n    const start = (slice - 1) * addPerTx;\n    const end = slice * addPerTx;\n    addresses_to_send = addresses_to_send.slice(start, end);\n    balances_to_send = balances_to_send.slice(start, end);\n    const totalInWei = balances_to_send.reduce((total, val) => {\n      return total.plus(new BN(val));\n    }, new BN(\"0\"));\n    const balances_to_send_sum = totalInWei.toString(10);\n    let ethValue;\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString());\n      ethValue = new BN(currentFee).plus(totalInEth);\n    } else {\n      ethValue = new BN(currentFee);\n    }\n    console.log(\n      \"getMultisendGas slice\",\n      slice,\n      addresses_to_send[0],\n      balances_to_send[0],\n      addPerTx\n    );\n    const web3 = this.web3Store.web3;\n    const multisender = new web3.eth.Contract(\n      MultiSenderAbi,\n      await this.tokenStore.proxyMultiSenderAddress()\n    );\n\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\n      const encodedData = await multisender.methods\n        .multiTransfer_OST(addresses_to_send, balances_to_send)\n        .encodeABI({ from: this.web3Store.defaultAccount });\n      console.log(\"web3.eth.estimateGas:\", web3.eth.estimateGas);\n      console.log(\"web3.eth:\", web3.eth);\n      const gas = await web3.eth.estimateGas({\n        from: this.web3Store.defaultAccount,\n        data: encodedData,\n        value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n        to: await this.tokenStore.proxyMultiSenderAddress(),\n      });\n      totalGas += gas;\n    } else {\n      const encodedData = await multisender.methods\n        .multiTransferToken_a4A(\n          token_address,\n          addresses_to_send,\n          balances_to_send,\n          balances_to_send_sum\n        )\n        .encodeABI({ from: this.web3Store.defaultAccount });\n\n      console.log(\"encodedData\", encodedData);\n      console.log(\"ethValue\", ethValue.toString());\n      try {\n        const gas = await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          to: await this.tokenStore.proxyMultiSenderAddress(),\n        });\n\n        console.log(\"gas\", gas);\n        totalGas += gas;\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    slice--;\n    if (slice > 0) {\n      totalGas += await this.getMultisendGas({ slice, addPerTx });\n    }\n    return totalGas;\n  }\n\n  async _multisend({ slice, addPerTx }) {\n    if (!this.keepRunning) {\n      return;\n    }\n    const token_address = this.tokenStore.tokenAddress;\n    let { addresses_to_send, balances_to_send, currentFee, totalBalance } =\n      this.tokenStore;\n\n    const start = (slice - 1) * addPerTx;\n    const end = slice * addPerTx;\n    addresses_to_send = addresses_to_send.slice(start, end);\n    balances_to_send = balances_to_send.slice(start, end);\n    const totalInWei = balances_to_send.reduce((total, val) => {\n      return total.plus(new BN(val));\n    }, new BN(\"0\"));\n    const balances_to_send_sum = totalInWei.toString(10);\n    let ethValue;\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString());\n      ethValue = new BN(currentFee).plus(totalInEth);\n    } else {\n      ethValue = new BN(currentFee);\n    }\n    console.log(\n      \"_multisend slice\",\n      slice,\n      addresses_to_send[0],\n      balances_to_send[0],\n      addPerTx\n    );\n    const web3 = this.web3Store.web3;\n    const multisender = new web3.eth.Contract(\n      MultiSenderAbi,\n      await this.tokenStore.proxyMultiSenderAddress()\n    );\n\n    try {\n      if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\n        let encodedData = await multisender.methods\n          .multiTransfer_OST(addresses_to_send, balances_to_send)\n          .encodeABI({ from: this.web3Store.defaultAccount });\n        let gas = await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          to: await this.tokenStore.proxyMultiSenderAddress(),\n        });\n        console.log(\"gas\", gas);\n        let myGasPrice = await web3.eth.getGasPrice();\n        let tx = multisender.methods\n          .multiTransfer_OST(addresses_to_send, balances_to_send)\n          .send({\n            from: this.web3Store.defaultAccount,\n            gasPrice: myGasPrice,\n            gas: Web3Utils.toHex(gas),\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          })\n\n          .once(\"transactionHash\", (hash) => {\n            this.txHashToIndex[hash] = this.txs.length;\n            this.txs.push({\n              status: \"pending\",\n              name: `Sending Batch #${this.txs.length} ${\n                this.tokenStore.tokenSymbol\n              }\\n\n            From ${addresses_to_send[0].substring(\n              0,\n              7\n            )} to: ${addresses_to_send[addresses_to_send.length - 1].substring(\n                0,\n                7\n              )}\n          `,\n              hash,\n            });\n          })\n          .once(\"receipt\", async (receipt) => {\n            await this.getTxStatus(receipt.transactionHash);\n          })\n          .on(\"error\", (error) => {\n            swal(\"Error!\", error.message, \"error\");\n            console.log(error);\n            // re-send\n            // this._multisend({ slice, addPerTx });\n          });\n      } else {\n        let encodedData = await multisender.methods\n          .multiTransferToken_a4A(\n            token_address,\n            addresses_to_send,\n            balances_to_send,\n            balances_to_send_sum\n          )\n          .encodeABI({ from: this.web3Store.defaultAccount });\n\n        console.log(\"_multisend token_address\", token_address);\n        console.log(\"_multisend addresses_to_send\", addresses_to_send);\n        console.log(\"_multisend balances_to_send\", balances_to_send);\n        console.log(\"_multisend balances_to_send_sum\", balances_to_send_sum);\n        console.log(\"_multisend encodedData\", encodedData);\n        let gas = await web3.eth.estimateGas({\n          from: this.web3Store.defaultAccount,\n          data: encodedData,\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          to: await this.tokenStore.proxyMultiSenderAddress(),\n        });\n        // console.log(\"_multisend gas\", gas);\n        let myGasPrice = await web3.eth.getGasPrice();\n        let tx = multisender.methods\n          .multiTransferToken_a4A(\n            token_address,\n            addresses_to_send,\n            balances_to_send,\n            balances_to_send_sum\n          )\n          .send({\n            from: this.web3Store.defaultAccount,\n            gasPrice: myGasPrice,\n            gas: Web3Utils.toHex(gas),\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\n          })\n\n          .once(\"transactionHash\", (hash) => {\n            this.txHashToIndex[hash] = this.txs.length;\n            this.txs.push({\n              status: \"pending\",\n              name: `Sending Batch #${this.txs.length} ${\n                this.tokenStore.tokenSymbol\n              }\\n\n            From ${addresses_to_send[0].substring(\n              0,\n              7\n            )} to: ${addresses_to_send[addresses_to_send.length - 1].substring(\n                0,\n                7\n              )}\n          `,\n              hash,\n            });\n          })\n          .once(\"receipt\", async (receipt) => {\n            await this.getTxStatus(receipt.transactionHash);\n          })\n          .on(\"error\", (error) => {\n            swal(\"Error!\", error.message, \"error\");\n            console.log(error);\n            // re-send\n            // this._multisend({ slice, addPerTx });\n          });\n      }\n      slice--;\n      if (slice > 0) {\n        this._multisend({ slice, addPerTx });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getTxReceipt(hash) {\n    console.log(\"getTxReceipt\");\n    try {\n      const web3 = this.web3Store.web3;\n      const res = await web3.eth.getTransaction(hash);\n      return res;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getTxStatus(hash) {\n    console.log(\"GET TX STATUS\", hash);\n    if (!this.keepRunning) {\n      return;\n    }\n    const index = this.txHashToIndex[hash];\n    const web3 = this.web3Store.web3;\n\n    const txInfo = await web3.eth.getTransaction(hash);\n    const receipt = await web3.eth.getTransactionReceipt(hash);\n    if (receipt.hasOwnProperty(\"status\")) {\n      if (receipt.status === \"0x1\") {\n        this.txs[index].status = `mined`;\n      } else if (receipt.status === \"0x0\") {\n        // if (receipt.gasUsed > txInfo.gas) {\n        this.txs[index].status = `error`;\n        this.txs[index].name = `Mined but with errors. Perhaps out of gas`;\n        // } else {\n        //   this.txs[index].status = `error`\n        //   this.txs[index].name = `Mined but with errors. Perhaps out of gas`\n        //   // bad tx status, not confirmed!\n        // }\n      } else {\n        // unknown status. pre-Byzantium\n        if (receipt.gasUsed >= txInfo.gas) {\n          this.txs[index].status = `error`;\n          this.txs[index].name = `Mined but with errors. Perhaps out of gas`;\n        } else {\n          this.txs[index].status = `mined`;\n        }\n      }\n    } else {\n      // unknown status. pre-Byzantium\n      if (receipt.gasUsed >= txInfo.gas) {\n        this.txs[index].status = `error`;\n        this.txs[index].name = `Mined but with errors. Perhaps out of gas`;\n      } else {\n        this.txs[index].status = `mined`;\n      }\n    }\n  }\n\n  // gas used by the already processed Approve tx\n  async getApproveTxGas() {\n    if (\"\" === this.approval) {\n      return 0;\n    }\n    const web3 = this.web3Store.web3;\n    const receipt = await web3.eth.getTransactionReceipt(this.approval);\n    return receipt.gasUsed;\n  }\n}\n\nexport default TxStore;\n","import Web3Store from './web3Store'\nimport TokenStore from './tokenStore';\nimport GasPriceStore from './gasPriceStore';\nimport TxStore from './txStore';\n\nclass UiStore {\n  constructor() {\n    this.gasPriceStore = new GasPriceStore()\n    this.web3Store = new Web3Store(this)\n    this.tokenStore = new TokenStore(this)\n    this.txStore = new TxStore(this)\n  }\n}\n\nexport default new UiStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from \"mobx-react\";\nimport UiStore from \"./stores/UiStore\";\n\nconst Root = (\n  <Provider UiStore={UiStore}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(Root, document.getElementById('wp-multisender-container'));\n"],"sourceRoot":""}